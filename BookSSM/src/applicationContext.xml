<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- 将com.pz.bookstore下及子包里面的所有有@Repository,@Controller,@Service,@Component的类实例化 -->
	<context:component-scan base-package="com.wr.bookstore.*"></context:component-scan>
	<!-- 由于mapper持久层（也就是mybatis实现的）没有实现类，无法用注解@Repository实现，所以只实例化了三个类 所以spring用了另外一种方式，也就是会用下面的org.mybatis.spring.mapper.MapperScannerConfigurer去主动扫庙这个接口去实例化 -->

<!-- 	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"> -->
<!-- 		<property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
<!-- 		<property name="url" value="jdbc:mysql://127.0.0.1:3306/test" /> -->
<!-- 		<property name="username" value="root" /> -->
<!-- 		<property name="password" value="123456" /> -->
<!-- 	</bean> -->

	

	
	<!-- 数据连接池:帮mybatis实现连接数据库,此处用的是dbcp,还有druid,c3p0... -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver">
		</property>
		<property name="url" value="jdbc:mysql://localhost:3306/book?useUnicode=true&amp;characterEncoding=utf8"></property>
		<property name="username" value="root"></property>
		<property name="password" value="123456"></property>
	</bean>

	<!-- 不需要定义SqlSessionFactory,注意configLocation当您使用MapperFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 自动扫描doamin目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.wr.bookstore.domain" /><!-- 
			以类名当别名 -->
		<property name="dataSource" ref="dataSource" />
		
		<property name="configLocation" value="classpath:mybatis.xml"></property>		
		
		<property name="mapperLocations"
			value="classpath:com/wr/bookstore/mapper/*Mapper.xml" />
	</bean>

	<!-- 扫描映射器 Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
		<property name="basePackage" value="com.wr.bookstore.mapper" />
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" 
			/> -->
	</bean>

	<!-- 事务处理 -->
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
